{
  "Description": "Creates sample Apache Beam pipeline that can be deployed to Kinesis Data Analytics for Java Applications and Amazon EMR (amazon-kinesis-analytics-beam-taxi-consumer)",
  "Resources": {
    "Bucket83908E77": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/Bucket/Resource"
      }
    },
    "EmptyBucketEmptyBucketLambdaServiceRole67452BDD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketLambda/ServiceRole/Resource"
      }
    },
    "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF",
        "Roles": [
          {
            "Ref": "EmptyBucketEmptyBucketLambdaServiceRole67452BDD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "EmptyBucketEmptyBucketLambdaD0E9E93D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\n\ndef empty_bucket(event, context):\n    bucket_name = os.environ['bucket_name']\n\n    try:\n        if event['RequestType'] == 'Delete':\n            print(\"empty bucket: \" + bucket_name)\n            \n            bucket = boto3.resource('s3').Bucket(bucket_name)\n            bucket.object_versions.delete()\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})"
        },
        "Role": {
          "Fn::GetAtt": [
            "EmptyBucketEmptyBucketLambdaServiceRole67452BDD",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "bucket_name": {
              "Ref": "Bucket83908E77"
            }
          }
        },
        "Handler": "index.empty_bucket",
        "MemorySize": 512,
        "Runtime": "python3.7",
        "Timeout": 900
      },
      "DependsOn": [
        "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF",
        "EmptyBucketEmptyBucketLambdaServiceRole67452BDD"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketLambda/Resource"
      }
    },
    "EmptyBucketEmptyBucketResource78AC492E": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "EmptyBucketEmptyBucketLambdaD0E9E93D",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/EmptyBucket/EmptyBucketResource"
      }
    },
    "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDDB48159": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDefaultPolicy841A2736": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "Bucket83908E77",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDefaultPolicy841A2736",
        "Roles": [
          {
            "Ref": "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDDB48159"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineDownloadLambda5F6C5A7A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDDB48159",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "url": "https://github.com/aws-samples/amazon-kinesis-analytics-beam-taxi-consumer/archive/master.zip",
            "bucket": {
              "Ref": "Bucket83908E77"
            },
            "key": "sources/amazon-kinesis-analytics-beam-taxi-consumer-master.zip"
          }
        },
        "Handler": "index.download_sources",
        "Runtime": "python3.7",
        "Timeout": 30
      },
      "DependsOn": [
        "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDefaultPolicy841A2736",
        "BeamTaxiConsumerBuildPipelineDownloadLambdaServiceRoleDDB48159"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambda/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineDownloadLambdaResourceEF8767F4": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BeamTaxiConsumerBuildPipelineDownloadLambda5F6C5A7A",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/DownloadLambdaResource/Default"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodebuildProjectRole8A633BC6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodebuildProjectRoleDefaultPolicy394A0A12": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamTaxiConsumerBuildPipelineCodebuildProjectRoleDefaultPolicy394A0A12",
        "Roles": [
          {
            "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectRole8A633BC6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodebuildProject/Role/DefaultPolicy/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/java:openjdk-11",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "BeamTaxiConsumerBuildPipelineCodebuildProjectRole8A633BC6",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-analytics-beam-taxi-consumer-master\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-analytics-beam-taxi-consumer-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-analytics-beam-taxi-consumer-master\"\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": "alias/aws/s3"
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodebuildProject/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineWaitHandle410EECC2": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/WaitHandle"
      }
    },
    "BeamTaxiConsumerBuildPipelineWaitConditionA50E497A": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Count": 1,
        "Handle": {
          "Ref": "BeamTaxiConsumerBuildPipelineWaitHandle410EECC2"
        },
        "Timeout": "1200"
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/WaitCondition"
      }
    },
    "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRole94083393": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRoleDefaultPolicy3E045A13": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codepipeline:PutJobSuccessResult",
                "codepipeline:PutJobFailureResult"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRoleDefaultPolicy3E045A13",
        "Roles": [
          {
            "Ref": "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRole94083393"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineNotifyLambdaEB7E94E5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRole94083393",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "waitHandleUrl": {
              "Ref": "BeamTaxiConsumerBuildPipelineWaitHandle410EECC2"
            }
          }
        },
        "Handler": "index.notify_build_success",
        "Runtime": "python3.7",
        "Timeout": 10
      },
      "DependsOn": [
        "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRoleDefaultPolicy3E045A13",
        "BeamTaxiConsumerBuildPipelineNotifyLambdaServiceRole94083393"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/NotifyLambda/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipelineRoleA2A59BB5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipelineRoleDefaultPolicy745C1C6E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamTaxiConsumerBuildPipelineCodePipelineRoleDefaultPolicy745C1C6E",
        "Roles": [
          {
            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineRoleA2A59BB5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Role/DefaultPolicy/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipeline1EFC3561": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "BeamTaxiConsumerBuildPipelineCodePipelineRoleA2A59BB5",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "S3Bucket": {
                    "Ref": "Bucket83908E77"
                  },
                  "S3ObjectKey": "sources/amazon-kinesis-analytics-beam-taxi-consumer-master.zip"
                },
                "Name": "SourceAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "Name": "BuildAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "BucketName": {
                    "Ref": "Bucket83908E77"
                  },
                  "Extract": "true"
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "Name": "CopyAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              },
              {
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Provider": "Lambda",
                  "Version": "1"
                },
                "Configuration": {
                  "FunctionName": {
                    "Ref": "BeamTaxiConsumerBuildPipelineNotifyLambdaEB7E94E5"
                  }
                },
                "Name": "InvokeAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458",
                    "Arn"
                  ]
                },
                "RunOrder": 2
              }
            ],
            "Name": "Copy"
          }
        ],
        "ArtifactStore": {
          "Location": {
            "Ref": "Bucket83908E77"
          },
          "Type": "S3"
        }
      },
      "DependsOn": [
        "BeamTaxiConsumerBuildPipelineCodePipelineRoleDefaultPolicy745C1C6E",
        "BeamTaxiConsumerBuildPipelineCodePipelineRoleA2A59BB5"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy16133A47": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy16133A47",
        "Roles": [
          {
            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole107A6A77"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyB6FE722C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamTaxiConsumerBuildPipelineCodebuildProjectE94068B3",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyB6FE722C",
        "Roles": [
          {
            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole8A9C2DB3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy46A4F07B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy46A4F07B",
        "Roles": [
          {
            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole08009C82"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource"
      }
    },
    "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyF8FF4A4E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:ListFunctions",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamTaxiConsumerBuildPipelineNotifyLambdaEB7E94E5",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyF8FF4A4E",
        "Roles": [
          {
            "Ref": "BeamTaxiConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleABC84458"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/BeamTaxiConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BeamTaxiCount-Complete/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/Resource"
      }
    },
    "VPCpublicSubnet1Subnet325F50B2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "BeamTaxiCount-Complete/VPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/publicSubnet1/Subnet"
      }
    },
    "VPCpublicSubnet1RouteTableF591E248": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BeamTaxiCount-Complete/VPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/publicSubnet1/RouteTable"
      }
    },
    "VPCpublicSubnet1RouteTableAssociationBFFA43B7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet1RouteTableF591E248"
        },
        "SubnetId": {
          "Ref": "VPCpublicSubnet1Subnet325F50B2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/publicSubnet1/RouteTableAssociation"
      }
    },
    "VPCpublicSubnet1DefaultRoute19059ECD": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet1RouteTableF591E248"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/publicSubnet1/DefaultRoute"
      }
    },
    "VPCpublicSubnet2Subnet2B2DFF71": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "BeamTaxiCount-Complete/VPC/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/publicSubnet2/Subnet"
      }
    },
    "VPCpublicSubnet2RouteTable55DAB1BB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BeamTaxiCount-Complete/VPC/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/publicSubnet2/RouteTable"
      }
    },
    "VPCpublicSubnet2RouteTableAssociation0849466B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
        },
        "SubnetId": {
          "Ref": "VPCpublicSubnet2Subnet2B2DFF71"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/publicSubnet2/RouteTableAssociation"
      }
    },
    "VPCpublicSubnet2DefaultRoute9ED4D6BC": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/publicSubnet2/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BeamTaxiCount-Complete/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/VPC/VPCGW"
      }
    },
    "EnrichEventsLambdaServiceRoleD32248A6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/EnrichEventsLambda/ServiceRole/Resource"
      }
    },
    "EnrichEventsLambda23B68032": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "'use strict';\nconsole.log('Loading function');\n\nexports.handler = (event, context, callback) => {\n    /* Process the list of records and transform them */\n    const output = event.records.map((record) => ({\n        recordId: record.recordId,\n        result: 'Ok',\n        data: enrichPayload(record),\n    }));\n    \n    console.log(`Processing completed.  Successful records ${output.length}.`);\n    \n    callback(null, { records: output });\n};\n\n\nfunction enrichPayload(record) {\n    const payload = JSON.parse(Buffer.from(record.data, 'base64').toString('utf8'));\n    const timestamp = new Date(record.kinesisRecordMetadata.approximateArrivalTimestamp).toISOString();\n    \n    const enrichedPayload = Object.assign({approximate_arrival_timestamp: timestamp}, payload);\n\n    return Buffer.from(JSON.stringify(enrichedPayload)+\"\\n\").toString('base64');\n}"
        },
        "Role": {
          "Fn::GetAtt": [
            "EnrichEventsLambdaServiceRoleD32248A6",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 60
      },
      "DependsOn": [
        "EnrichEventsLambdaServiceRoleD32248A6"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/EnrichEventsLambda/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRole86B346C9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy102A21E6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "Bucket83908E77",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy102A21E6",
        "Roles": [
          {
            "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRole86B346C9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambda644E8085": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRole86B346C9",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "url": "https://github.com/aws-samples/amazon-kinesis-replay/archive/release-0.1.0.zip",
            "bucket": {
              "Ref": "Bucket83908E77"
            },
            "key": "sources/amazon-kinesis-replay-release-0.1.0.zip"
          }
        },
        "Handler": "index.download_sources",
        "Runtime": "python3.7",
        "Timeout": 30
      },
      "DependsOn": [
        "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy102A21E6",
        "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaServiceRole86B346C9"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambda/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambdaResource49730AA6": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "KinesisReplayInfrastructureKinesisReplayBuildPipelineDownloadLambda644E8085",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/DownloadLambdaResource/Default"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRole3C10904F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Role/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRoleDefaultPolicyAC53B5B1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRoleDefaultPolicyAC53B5B1",
        "Roles": [
          {
            "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRole3C10904F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Role/DefaultPolicy/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/java:openjdk-11",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProjectRole3C10904F",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-replay-release-0.1.0\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-replay-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-replay-release-0.1.0\"\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": "alias/aws/s3"
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodebuildProject/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineWaitHandle3C26CE2C": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/WaitHandle"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineWaitConditionEDD2A6F2": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Count": 1,
        "Handle": {
          "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineWaitHandle3C26CE2C"
        },
        "Timeout": "1200"
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/WaitCondition"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRole1532D198": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyFE5622CC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codepipeline:PutJobSuccessResult",
                "codepipeline:PutJobFailureResult"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyFE5622CC",
        "Roles": [
          {
            "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRole1532D198"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambda9D2FC2E0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRole1532D198",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "waitHandleUrl": {
              "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineWaitHandle3C26CE2C"
            }
          }
        },
        "Handler": "index.notify_build_success",
        "Runtime": "python3.7",
        "Timeout": 10
      },
      "DependsOn": [
        "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyFE5622CC",
        "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambdaServiceRole1532D198"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/NotifyLambda/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRole8619A4EA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Role/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicyBE99C5D4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole2D3A619B",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole5381CB1D",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole60F16D3A",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole9DE755D2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicyBE99C5D4",
        "Roles": [
          {
            "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRole8619A4EA"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Role/DefaultPolicy/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineD89A5056": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRole8619A4EA",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "S3Bucket": {
                    "Ref": "Bucket83908E77"
                  },
                  "S3ObjectKey": "sources/amazon-kinesis-replay-release-0.1.0.zip"
                },
                "Name": "SourceAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole2D3A619B",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "Name": "BuildAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole5381CB1D",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "BucketName": {
                    "Ref": "Bucket83908E77"
                  },
                  "Extract": "true"
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "Name": "CopyAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole60F16D3A",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              },
              {
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Provider": "Lambda",
                  "Version": "1"
                },
                "Configuration": {
                  "FunctionName": {
                    "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambda9D2FC2E0"
                  }
                },
                "Name": "InvokeAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole9DE755D2",
                    "Arn"
                  ]
                },
                "RunOrder": 2
              }
            ],
            "Name": "Copy"
          }
        ],
        "ArtifactStore": {
          "Location": {
            "Ref": "Bucket83908E77"
          },
          "Type": "S3"
        }
      },
      "DependsOn": [
        "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicyBE99C5D4",
        "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineRole8619A4EA"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole2D3A619B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy236BB23E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy236BB23E",
        "Roles": [
          {
            "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRole2D3A619B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole5381CB1D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyF9260D33": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodebuildProject8B60D31D",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyF9260D33",
        "Roles": [
          {
            "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole5381CB1D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole60F16D3A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy9B2CA74C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy9B2CA74C",
        "Roles": [
          {
            "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole60F16D3A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole9DE755D2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource"
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyE2818116": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:ListFunctions",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KinesisReplayInfrastructureKinesisReplayBuildPipelineNotifyLambda9D2FC2E0",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyE2818116",
        "Roles": [
          {
            "Ref": "KinesisReplayInfrastructureKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole9DE755D2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "KinesisReplayInfrastructureSecurityGroup192A878A": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:22",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/SecurityGroup/Resource"
      }
    },
    "KinesisReplayInfrastructureReplayRole501258B1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonS3ReadOnlyAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/ReplayRole/Resource"
      }
    },
    "KinesisReplayInfrastructureReplayRoleDefaultPolicy351423BD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "kinesis:*",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KinesisReplayInfrastructureReplayRoleDefaultPolicy351423BD",
        "Roles": [
          {
            "Ref": "KinesisReplayInfrastructureReplayRole501258B1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/ReplayRole/DefaultPolicy/Resource"
      }
    },
    "KinesisReplayInfrastructureInstanceProfile4256A29E": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "KinesisReplayInfrastructureReplayRole501258B1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/InstanceProfile"
      }
    },
    "KinesisReplayInfrastructureReplayInstance5A978C92": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "KinesisReplayInfrastructureInstanceProfile4256A29E"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "c5.2xlarge",
        "KeyName": {
          "Ref": "KeyName"
        },
        "Monitoring": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "KinesisReplayInfrastructureSecurityGroup192A878A",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VPCpublicSubnet1Subnet325F50B2"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -x\n            \n            yum update -y\n            yum install -y tmux\n\n            # install Java 11\n            amazon-linux-extras enable java-openjdk11\n            yum install -y java-11-openjdk\n\n            # copy the replay Java app from s3\n            su ec2-user -l -c \"aws s3 cp --recursive --exclude '*' --include 'amazon-kinesis-replay-*.jar' 's3://",
                {
                  "Ref": "Bucket83908E77"
                },
                "/target/' .\""
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/KinesisReplayInfrastructure/ReplayInstance"
      }
    },
    "EmrInfrastructureSecurityGroupC050C542": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "BeamTaxiCount-Complete/EmrInfrastructure/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:22",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/EmrInfrastructure/SecurityGroup/Resource"
      }
    },
    "EmrInfrastructureReplayRole45BC559F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/EmrInfrastructure/ReplayRole/Resource"
      }
    },
    "EmrInfrastructureInstanceProfileA9CB34C5": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "EmrInfrastructureReplayRole45BC559F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/EmrInfrastructure/InstanceProfile"
      }
    },
    "EmrInfrastructureEmrClusterE950A629": {
      "Type": "AWS::EMR::Cluster",
      "Properties": {
        "Instances": {
          "AdditionalMasterSecurityGroups": [
            {
              "Ref": "EmrInfrastructureSecurityGroupC050C542"
            }
          ],
          "CoreInstanceGroup": {
            "InstanceCount": 2,
            "InstanceType": "r5.xlarge",
            "Name": "Core"
          },
          "Ec2KeyName": {
            "Ref": "KeyName"
          },
          "Ec2SubnetId": {
            "Ref": "VPCpublicSubnet1Subnet325F50B2"
          },
          "MasterInstanceGroup": {
            "InstanceCount": 1,
            "InstanceType": "c5.xlarge",
            "Name": "Master"
          }
        },
        "JobFlowRole": {
          "Ref": "EmrInfrastructureInstanceProfileA9CB34C5"
        },
        "Name": "Beam",
        "ServiceRole": "EMR_DefaultRole",
        "Applications": [
          {
            "Name": "Hadoop"
          },
          {
            "Name": "Ganglia"
          },
          {
            "Name": "Flink"
          },
          {
            "Name": "ZooKeeper"
          }
        ],
        "Configurations": [
          {
            "Classification": "emrfs-site",
            "ConfigurationProperties": {
              "fs.s3.maxConnections": "1000"
            }
          }
        ],
        "ReleaseLabel": "emr-5.20.0",
        "VisibleToAllUsers": true
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/EmrInfrastructure/EmrCluster"
      }
    },
    "InputStreamCFB159EA": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "ShardCount": 4,
        "RetentionPeriodHours": 24,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis"
            }
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/InputStream/Resource"
      }
    },
    "Dashboard9E4231ED": {
      "Type": "AWS::CloudWatch::Dashboard",
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{\"widgets\":[{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Kinesis\",\"GetRecords.IteratorAgeMilliseconds\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":60,\"stat\":\"Maximum\"}],[\"AWS/Kinesis\",\"IncomingRecords\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":60,\"stat\":\"Sum\",\"yAxis\":\"right\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"Beam\",\"Number of Trips\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":5,\"stat\":\"Maximum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"Beam\",\"Number of Trips\",\"Borough\",\"Bronx\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":5,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Brooklyn\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":5,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Queens\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":5,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Staten Island\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":5,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Manhattan\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":5,\"stat\":\"Maximum\",\"yAxis\":\"right\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Unknown\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":5,\"stat\":\"Maximum\",\"yAxis\":\"right\"}]],\"yAxis\":{}}}]}"
            ]
          ]
        },
        "DashboardName": {
          "Ref": "AWS::StackName"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/Dashboard/Resource"
      }
    },
    "FirehoseInfrastructureFirehoseRole3E5B243F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FirehoseInfrastructure/FirehoseRole/Resource"
      }
    },
    "FirehoseInfrastructureFirehoseRoleDefaultPolicyF3BBC6E6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InputStreamCFB159EA",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EnrichEventsLambda23B68032",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FirehoseInfrastructureFirehoseRoleDefaultPolicyF3BBC6E6",
        "Roles": [
          {
            "Ref": "FirehoseInfrastructureFirehoseRole3E5B243F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FirehoseInfrastructure/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "FirehoseInfrastructureFirehoseDeliveryStream365513AC": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "Bucket83908E77",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 128
          },
          "CompressionFormat": "GZIP",
          "Prefix": "kinesis-stream-data/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "EnrichEventsLambda23B68032",
                        "Arn"
                      ]
                    }
                  }
                ],
                "Type": "Lambda"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseInfrastructureFirehoseRole3E5B243F",
              "Arn"
            ]
          }
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "InputStreamCFB159EA",
              "Arn"
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseInfrastructureFirehoseRole3E5B243F",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "BeamTaxiConsumerBuildPipelineWaitConditionA50E497A",
        "EmptyBucketEmptyBucketLambdaD0E9E93D",
        "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF",
        "EmptyBucketEmptyBucketLambdaServiceRole67452BDD",
        "EmptyBucketEmptyBucketResource78AC492E"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FirehoseInfrastructure/FirehoseDeliveryStream"
      }
    },
    "FlinkInfrastructureKinesisAnalyticsRole71C99707": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kinesisanalytics.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/KinesisAnalyticsRole/Resource"
      }
    },
    "FlinkInfrastructureKinesisAnalyticsRoleDefaultPolicy2AA4B95F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InputStreamCFB159EA",
                  "Arn"
                ]
              }
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FlinkInfrastructureFlinkLogGroupD9BFEBD6",
                  "Arn"
                ]
              }
            },
            {
              "Action": "logs:DescribeLogStreams",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FlinkInfrastructureFlinkLogGroupD9BFEBD6",
                  "Arn"
                ]
              }
            },
            {
              "Action": "logs:DescribeLogGroups",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::nyc-tlc"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::nyc-tlc/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FlinkInfrastructureKinesisAnalyticsRoleDefaultPolicy2AA4B95F",
        "Roles": [
          {
            "Ref": "FlinkInfrastructureKinesisAnalyticsRole71C99707"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/KinesisAnalyticsRole/DefaultPolicy/Resource"
      }
    },
    "FlinkInfrastructureFlinkLogGroupD9BFEBD6": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 7
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkLogGroup/Resource"
      }
    },
    "FlinkInfrastructureFlinkLogStream37FF822A": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "FlinkInfrastructureFlinkLogGroupD9BFEBD6"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkLogStream/Resource"
      }
    },
    "FlinkInfrastructureFlinkApplicationBEFFC04F": {
      "Type": "AWS::KinesisAnalyticsV2::Application",
      "Properties": {
        "RuntimeEnvironment": "FLINK-1_8",
        "ServiceExecutionRole": {
          "Fn::GetAtt": [
            "FlinkInfrastructureKinesisAnalyticsRole71C99707",
            "Arn"
          ]
        },
        "ApplicationConfiguration": {
          "ApplicationCodeConfiguration": {
            "CodeContent": {
              "S3ContentLocation": {
                "BucketARN": {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                "FileKey": "target/amazon-kinesis-analytics-beam-taxi-consumer-1.0-SNAPSHOT.jar"
              }
            },
            "CodeContentType": "ZIPFILE"
          },
          "ApplicationSnapshotConfiguration": {
            "SnapshotsEnabled": false
          },
          "EnvironmentProperties": {
            "PropertyGroups": [
              {
                "PropertyGroupId": "BeamApplicationProperties",
                "PropertyMap": {
                  "AwsRegion": {
                    "Ref": "AWS::Region"
                  },
                  "InputStreamName": {
                    "Ref": "InputStreamCFB159EA"
                  },
                  "OutputBoroughs": "false",
                  "InputS3Pattern": {
                    "Fn::Join": [
                      "",
                      [
                        "s3://",
                        {
                          "Ref": "Bucket83908E77"
                        },
                        "/kinesis-stream-data/*/*/*/*/*"
                      ]
                    ]
                  },
                  "Source": "kinesis"
                }
              }
            ]
          },
          "FlinkApplicationConfiguration": {
            "MonitoringConfiguration": {
              "ConfigurationType": "CUSTOM",
              "LogLevel": "INFO",
              "MetricsLevel": "TASK"
            },
            "ParallelismConfiguration": {
              "AutoScalingEnabled": false,
              "ConfigurationType": "CUSTOM",
              "Parallelism": 4,
              "ParallelismPerKPU": 1
            }
          }
        },
        "ApplicationName": {
          "Ref": "AWS::StackName"
        }
      },
      "DependsOn": [
        "BeamTaxiConsumerBuildPipelineWaitConditionA50E497A"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkApplication"
      }
    },
    "FlinkInfrastructureFlinkLogging8F449288": {
      "Type": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
      "Properties": {
        "ApplicationName": {
          "Ref": "FlinkInfrastructureFlinkApplicationBEFFC04F"
        },
        "CloudWatchLoggingOption": {
          "LogStreamARN": {
            "Fn::Join": [
              "",
              [
                "arn:aws:logs:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":log-group:",
                {
                  "Ref": "FlinkInfrastructureFlinkLogGroupD9BFEBD6"
                },
                ":log-stream:",
                {
                  "Ref": "FlinkInfrastructureFlinkLogStream37FF822A"
                }
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/FlinkLogging"
      }
    },
    "FlinkInfrastructureTerminateAppLambdaServiceRoleBC54A969": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/ServiceRole/Resource"
      }
    },
    "FlinkInfrastructureTerminateAppLambdaServiceRoleDefaultPolicy555FF482": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kinesisanalytics:StopApplication",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kinesisanalytics:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":application/",
                    {
                      "Ref": "FlinkInfrastructureFlinkApplicationBEFFC04F"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FlinkInfrastructureTerminateAppLambdaServiceRoleDefaultPolicy555FF482",
        "Roles": [
          {
            "Ref": "FlinkInfrastructureTerminateAppLambdaServiceRoleBC54A969"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "FlinkInfrastructureTerminateAppLambdaB2D53924": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport boto3\n\nclient = boto3.client('kinesisanalyticsv2')\n\ndef empty_bucket(event, context):\n    response = client.stop_application(\n        ApplicationName=os.environ['application_name']\n    )"
        },
        "Role": {
          "Fn::GetAtt": [
            "FlinkInfrastructureTerminateAppLambdaServiceRoleBC54A969",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "application_name": {
              "Ref": "FlinkInfrastructureFlinkApplicationBEFFC04F"
            }
          }
        },
        "Handler": "index.empty_bucket",
        "MemorySize": 512,
        "Runtime": "python3.7",
        "Timeout": 900
      },
      "DependsOn": [
        "FlinkInfrastructureTerminateAppLambdaServiceRoleDefaultPolicy555FF482",
        "FlinkInfrastructureTerminateAppLambdaServiceRoleBC54A969"
      ],
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/Resource"
      }
    },
    "FlinkInfrastructureTerminateAppLambdaAllowInvokeBeamTaxiCountCompleteFlinkInfrastructureAppTerminatedTopic87DD645B23FB2833": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "FlinkInfrastructureTerminateAppLambdaB2D53924",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "FlinkInfrastructureAppTerminatedTopicFEFBAAE4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/AllowInvoke:BeamTaxiCountCompleteFlinkInfrastructureAppTerminatedTopic87DD645B"
      }
    },
    "FlinkInfrastructureTerminateAppLambdaAppTerminatedTopicE4CEBE9F": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "FlinkInfrastructureAppTerminatedTopicFEFBAAE4"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "FlinkInfrastructureTerminateAppLambdaB2D53924",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/TerminateAppLambda/AppTerminatedTopic/Resource"
      }
    },
    "FlinkInfrastructureAppTerminatedFilter27E13BC8": {
      "Type": "AWS::Logs::MetricFilter",
      "Properties": {
        "FilterPattern": "Job reached globally terminal state FINISHED",
        "LogGroupName": {
          "Ref": "FlinkInfrastructureFlinkLogGroupD9BFEBD6"
        },
        "MetricTransformations": [
          {
            "DefaultValue": 0,
            "MetricName": "BeamApplicationFinished",
            "MetricNamespace": "Beam",
            "MetricValue": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/AppTerminatedFilter/Resource"
      }
    },
    "FlinkInfrastructureAppTerminatedAlarmF585A163": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "FlinkInfrastructureAppTerminatedTopicFEFBAAE4"
          }
        ],
        "MetricName": "BeamApplicationFinished",
        "Namespace": "Beam",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 0,
        "TreatMissingData": "notBreaching"
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/AppTerminatedAlarm/Resource"
      }
    },
    "FlinkInfrastructureAppTerminatedTopicFEFBAAE4": {
      "Type": "AWS::SNS::Topic",
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/FlinkInfrastructure/AppTerminatedTopic/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAE2VTyW7bMBD9lt4Zpk7QAr3VdZC0QIsIduCcR9TIHpsbuMQwBP17SUqWnOSkN/ubN9SC//jOv375CSd/I5rjbSeMQ95tAogjWxntg4sisFWrn2OwsaA1ehOdwIwrcKAwoGPX3lTYUCCje5Ybd/6ed7+iOGKpH1DPJKi6Ad49Ri1yco5d4wqdIu9LGwLFu7WRpX35VkaSOJe8Cf1JfEELrJxpSWLPhDSxaY1TkJvyLnOLPhg1s/1gtvoVKEwL/AbdyM/u1Nk0WEeSDe8qsihJ56kHHMQa4ZBmx/icWVJG3DMUd7zbWpG922rFqlinhTax1oNeM1qbGPAF6oHR4J99S++NILjIVwKDKuk+KfMJAp7gPI4ZrWVIp94r1IFtUERH4fzkTLRlwEfHRd/EWTmexZRJvnT8Y1rEk88PxyGoUlzQeIITBLHn3QP4fW3ANTlhNpYSXKkpoL90a8nh3njMgx6SVm/ozmN/aXZp2F+zm6hNOIGZxGz8w+BIPJLMdFPk2p4mggZ5DiR8eSlLa9Mdip7bO/bescpbveat0ogd6d2zHfJ65nXWIdZeOLKXY7yzX4ylcu0C+r5nOj0TfvC3b4tvfHGffsiDJ7pxUQdSyNfD9z8A/BiXrAMAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "BeamTaxiCount-Complete/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "S3Bucket": {
      "Value": {
        "Ref": "Bucket83908E77"
      }
    },
    "BeamTaxiConsumerBuildPipelineAmazonKinesisAnalyticsBeamTaxiConsumerCopyCommand89496320": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws s3 cp --recursive --exclude '*' --include 'amazon-kinesis-analytics-beam-taxi-consumer-*.jar' 's3://",
            {
              "Ref": "Bucket83908E77"
            },
            "/target/' ."
          ]
        ]
      }
    },
    "KinesisReplayInfrastructureKinesisReplayBuildPipelineAmazonKinesisReplayCopyCommand95EC83DD": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws s3 cp --recursive --exclude '*' --include 'amazon-kinesis-replay-*.jar' 's3://",
            {
              "Ref": "Bucket83908E77"
            },
            "/target/' ."
          ]
        ]
      }
    },
    "KinesisReplayInfrastructureKinesisReplayInstance97EC36CE": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "ssh -C ec2-user@",
            {
              "Fn::GetAtt": [
                "KinesisReplayInfrastructureReplayInstance5A978C92",
                "PublicDnsName"
              ]
            }
          ]
        ]
      }
    },
    "KinesisReplayInfrastructureKinesisReplayCommand726D7342": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "java -jar amazon-kinesis-replay-*.jar -streamRegion ",
            {
              "Ref": "AWS::Region"
            },
            " -streamName ",
            {
              "Ref": "InputStreamCFB159EA"
            },
            " -objectPrefix artifacts/kinesis-analytics-taxi-consumer/taxi-trips-partitioned.json.lz4/dropoff_year=2018/ -speedup 720"
          ]
        ]
      }
    },
    "EmrInfrastructureSshEmrClusterEC3E33DC": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "ssh -C -D 8157 hadoop@",
            {
              "Fn::GetAtt": [
                "EmrInfrastructureEmrClusterE950A629",
                "MasterPublicDNS"
              ]
            }
          ]
        ]
      }
    },
    "EmrInfrastructureStartFlinkRuntime2BE04C38": {
      "Value": "flink-yarn-session -n 2 -s 4 -tm 16GB -d"
    },
    "EmrInfrastructureStartFlinkApplicationB5E624EA": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "flink run -p 8 amazon-kinesis-analytics-beam-taxi-consumer-1.0-SNAPSHOT.jar --runner=FlinkRunner --inputS3Pattern=s3://",
            {
              "Ref": "Bucket83908E77"
            },
            "/kinesis-stream-data/*/*/*/*/* --awsRegion=",
            {
              "Ref": "AWS::Region"
            },
            " --inputStreamName=",
            {
              "Ref": "InputStreamCFB159EA"
            },
            " --source=s3 --outputBoroughs=true"
          ]
        ]
      }
    },
    "FlinkInfrastructureFlinkLogGroupNameF37E6FFF": {
      "Value": {
        "Ref": "FlinkInfrastructureFlinkLogGroupD9BFEBD6"
      }
    }
  },
  "Parameters": {
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    }
  },
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-north-1"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-northwest-1"
          ]
        }
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}